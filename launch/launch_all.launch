<?xml version="1.0"?>
<launch>



	<!-- <rosparam command="load" file="$(find simple_navigation_goals)/config/red_rover_config.yaml" /> -->



	<arg name="REACH_IP" value="$(optenv REACH_IP 192.168.131.201)" />
	<arg name="REACH_SERIAL_PORT" value="$(optenv REACH_SERIAL_PORT /dev/ttyACM1)" />
	<arg name="REACH_BAUD" value="$(optenv REACH_BAUD 9600)" />
	<arg name="ARDUINO_SERIAL_PORT" value="$(optenv ARDUINO_SERIAL_PORT /dev/ttyACM2)" />
	<arg name="ARDUINO_BAUD" value="$(optenv ARDUINO_BAUD 9600)" />
	<arg name="FLAG_FILE" value="$(env FLAG_FILE)" />
	<arg name="PATH_FILE" value="$(env PATH_FILE)" />



	<!-- Launches emlid_socketio_client.py file TODO: Convert to ROS service or node -->
	<node pkg="simple_navigation_goals" name="emlid_socketio_client" type="emlid_socketio_client.py" output="screen" args="$(arg REACH_IP) 80 $(arg ARDUINO_SERIAL_PORT) $(arg ARDUINO_BAUD)" />
	
	<!-- Launches file for rosbridge server -->
	<include file="$(find rosbridge_server)/launch/rosbridge_websocket.launch" />

	<!-- Node to read data from reach via serial -->
	<node pkg="nmea_navsat_driver" type="nmea_serial_driver" name="reach_nmea_driver" respawn="false">
		<param name="port" value="$(arg REACH_SERIAL_PORT)" />
		<param name="baud" value="$(arg REACH_BAUD)" />
	</node>

	<!-- Launches IMU launch file -->
	<include file="$(find simple_navigation_goals)/launch/imu.launch" ns="phidget" />

	<!-- Launches jackal position service -->
	<node pkg="simple_navigation_goals" name="jackal_pos_server" type="jackal_pos_server.py" output="screen" />

	<!-- Launches jackal rotation service -->
	<node pkg="simple_navigation_goals" name="jackal_rot_server" type="jackal_rot_server.py" output="screen" />

	<!-- Launches jackal_flags_node.py -->
	<node pkg="simple_navigation_goals" name="jackal_flags_node" type="jackal_flags_node.py" output="screen" args="" />	

	

</launch>